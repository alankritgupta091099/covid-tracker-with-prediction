{"version":3,"sources":["components/Table.js","App.js","index.js"],"names":["Table","data","totalCases","useState","dates","setDate","relativeDiff","setrelativeDiff","predictedCases","setPredtctedCases","class","id","data-backdrop","type","data-dismiss","className","style","marginLeft","map","obj","Date","Count","data-toggle","data-target","onClick","axios","get","then","result","datesArr","Object","keys","finalArr","i","length","date","push","percDiff","Math","abs","toFixed","catch","err","console","log","country","countryName","cases","App","props","state","countries","a","sort","b","sortedArr","arr","forEach","element","tests","active","deaths","coordinates","countryInfo","long","lat","setState","this","hoveredObject","pointerX","pointerY","boxData","display","position","borderRadius","padding","zIndex","fontFamily","textTransform","width","height","pointerEvents","backgroundColor","color","left","top","dangerouslySetInnerHTML","__html","layer","ScatterplotLayer","pickable","opacity","stroked","radiusScale","radiusMinPixels","radiusMaxPixels","lineWidthMinPixels","getPosition","d","getRadius","sqrt","getFillColor","onHover","info","object","x","y","initialViewState","longitude","latitude","zoom","controller","layers","mapboxApiAccessToken","process","mapStyle","_renderTooltip","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ac3750d.chunk.js","sourcesContent":["import React,{useState} from 'react'\nimport axios from 'axios';\n\nexport default function Table({data, totalCases}) {\n\n    const [dates, setDate] = useState([])\n    const [relativeDiff, setrelativeDiff] = useState(0)\n    const [predictedCases, setPredtctedCases] = useState(0)\n    function getdata() {        \n        axios\n            .get('http://ec2-15-206-116-200.ap-south-1.compute.amazonaws.com:8080/predict')\n            .then((result) => {\n                var datesArr = Object.keys(result.data);\n                var finalArr = [];\n                for (let i = 0; i < datesArr.length; i++) {\n                    const date = datesArr[i];\n                    finalArr.push({\n                        'Date':date,\n                        'Count':result.data[date]\n                    })\n                }\n                setDate(finalArr)\n                var percDiff =  100 * Math.abs( (totalCases - finalArr[0].Count) / ( (totalCases+finalArr[0].Count)/2 ) )\n                setrelativeDiff(percDiff.toFixed(2));\n                setPredtctedCases(finalArr[0].Count)\n            }).catch((err) => {\n                console.log(err)\n            });        \n    }\n    \n    return (\n        <>\n        <div class=\"modal fade\" id=\"myModal\" data-backdrop=\"false\">\n                <div class=\"modal-dialog\">\n                    <div class=\"modal-content\">\n                        <div class=\"modal-header\">\n                            <button type=\"button\" class=\"close\" data-dismiss=\"modal\">&times;</button>\n                            <h4 class=\"modal-title\">Worldwide Predicted Cases(next 9 Days)</h4>\n                        </div>\n                        <div class=\"modal-body\">\n                            <form className=\"holder\" style={{marginLeft:'10rem'}}>\n                                <p>Relative difference between Todays's actual cases ({totalCases}) & predicted cases ({predictedCases}) is: {relativeDiff} %</p>\n                            <table className=\"table table-hover table-bordered results\">\n                                <thead>\n                                    <tr>\n                                    <th className=\"col-md-5 col-xs-5\">Date</th>\n                                    <th className=\"col-md-4 col-xs-4\">Total Cases</th>\n                                    </tr>\n                                </thead>\n                                <tbody>\n                                    {\n                                        dates.map(obj=>{\n                                            return (\n                                                <tr>\n                                                    <td>{obj.Date}</td>\n                                                    <td>{obj.Count}</td>\n                                                </tr>\n                                            )\n                                        })\n                                    }\n                                </tbody>\n                            </table>\n                            </form>\n                        </div>\n                        <div class=\"modal-footer\">\n                            <button type=\"button\" class=\"btn btn-default\" data-dismiss=\"modal\">Close</button>\n                        </div>\n                    </div>        \n                </div>\n            </div>\n\n        <div className=\"wrapper\">\n            <form className=\"holder\">\n                <h3>Total Cases: {totalCases}</h3>\n                <p><i><u><button type=\"button\" data-toggle=\"modal\" data-target=\"#myModal\" onClick={getdata}>Click Here</button></u></i> To checkout next 7 days prediction</p>\n                <table className=\"table table-hover table-bordered results\">\n                    <thead>\n                        <tr>\n                        <th className=\"col-md-5 col-xs-5\">Country</th>\n                        <th className=\"col-md-4 col-xs-4\">Total Cases</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {\n                            data.map(country=>{\n                                return (\n                                    <tr>\n                                        <td>{country.countryName}</td>\n                                        <td>{country.cases}</td>\n                                    </tr>\n                                )\n                            })\n                        }\n                    </tbody>\n                </table>\n            </form>            \n        </div>\n        <div class=\"container\">\n            \n        </div>\n    </>\n    )\n}\n","import React from 'react';\nimport './App.css';\nimport {ScatterplotLayer} from 'deck.gl';\nimport DeckGL from '@deck.gl/react'\nimport {StaticMap} from 'react-map-gl';\nimport axios from 'axios';\n\nimport Table from './components/Table.js';\n\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       countries:[]\n    }\n  }\n  \n\n  componentDidMount() {\n    axios\n      .get('https://corona.lmao.ninja/v2/countries?yesterday&sort')\n      .then(async (result) => {\n        const sortedArr = await result.data.sort(function(a,b){\n          return b.cases - a.cases\n        })\n        var arr = [];\n        var totalCases = 0;\n        sortedArr.forEach(async element => {\n          totalCases+=element.cases;\n          await arr.push({\n            countryName:element.country,\n            tests:element.tests,\n            active:element.active,\n            deaths:element.deaths,\n            cases: element.cases,\n            coordinates: [element.countryInfo.long, element.countryInfo.lat]\n          })\n        });\n        this.setState({\n          countries: arr,\n          totalCases\n        })\n      }).catch((err) => {\n        console.log(err)\n      });\n  }\n  \n  _renderTooltip() {\n    const {hoveredObject, pointerX, pointerY} = this.state || {};\n    var boxData=\"\"\n    if(hoveredObject)\n    {\n      boxData= `<div>\n      ${\"<b>Country Name: </b> <i>\"+hoveredObject.countryName+\"</i><br>\"}\n      ${\"<b>Total tests conducted: </b> <i>\"+hoveredObject.tests+\"</i><br>\"}\n      ${\"<b>Total Cases: </b> <i>\"+hoveredObject.cases+\"</i><br>\"}\n      ${\"<b>Active Cases: </b> <i>\"+hoveredObject.active+\"</i><br>\"}\n      ${\"<b>Death Count: </b> <i>\"+hoveredObject.deaths+\"</i><br>\"}\n      </div>`\n    }\n    \n    return hoveredObject && (\n      <div \n      style={{        \n        display: 'flex',\n        position: 'fixed', \n        borderRadius:'0 12px 0 12px',\n        padding:'7px 18px',\n        zIndex: 1, \n        fontFamily:'Ubuntu',\n        textTransform:'uppercase',\n        width:'360px',\n        height:'auto',\n        pointerEvents: 'none', \n        backgroundColor:'#6F8385',\n        color:'#fff',\n        left: pointerX, \n        top: pointerY\n        }}      \n      dangerouslySetInnerHTML={{\n        __html:boxData\n        }}>\n\n      </div>\n    )\n  }\n\n  render() {\n\n    const initialViewState = {\n      longitude: -80, \n      latitude: 74.5, \n      zoom: 1.1,\n    };\n\n    const layer = new ScatterplotLayer({\n      data: this.state.countries,\n      pickable: true,\n      opacity: 0.8,\n      stroked: true,\n      radiusScale: 300,\n      radiusMinPixels: 1,\n      radiusMaxPixels: 50,\n      lineWidthMinPixels: 0.2,\n      getPosition: d => d.coordinates,\n      getRadius: d => Math.sqrt(d.cases),\n      getFillColor: d => [255, 0, 200, 100],\n      onHover: info => this.setState({\n        hoveredObject: info.object,\n        pointerX: info.x,\n        pointerY: info.y\n      })\n    });\n    \n   \n    \n    return (\n      <>      \n      <DeckGL\n          initialViewState={initialViewState}\n          controller={true}\n          layers={layer}\n        >\n          <StaticMap \n            mapboxApiAccessToken={process.env.REACT_APP_MAP_BOX_TOKEN}\n            mapStyle={'mapbox://styles/mapbox/light-v10'}\n          /> \n          <Table className=\"sidebar\" data={this.state.countries} totalCases={this.state.totalCases}/>\n          { this._renderTooltip() }\n      </DeckGL>\n      </>      \n    )\n  }\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}